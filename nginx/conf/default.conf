upstream next {
    server next:3000;
}

upstream backend {
    server backend:8080;
}

server {
	listen 443 ssl;
	ssl_protocols TLSv1.2 TLSv1.3;
	server_name localhost;

	ssl_certificate /etc/ssl/private/my_certificate.crt;
	ssl_certificate_key /etc/ssl/private/my_key.key;
    
	location / {
        proxy_pass http://next/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

	location /blind/ {
        proxy_pass http://backend/blind/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;

    location / {
        proxy_pass http://next/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /blind/ {
        proxy_pass http://backend/blind/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}